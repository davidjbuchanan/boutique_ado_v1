We're going to get our first look at the Command Line Interface, or CLI for short.
Now the tool that we're going to be using to work with the Command Line Interface is called the terminal.
Every operating system allows access to the terminal.

Gitpod is a cloud-based IDE, 
    which runs on the Linux operating system.
    The CLI we're using here is called bash.

(If you chose to install your own editor, such as VS Code or Sublime Text, then you can use the same commands if your operating system is Linux or Mac OS. If you chose to install your own editor and you use Windows, then you will need to install a utility called Git Bash. These commands will not work in the Windows command prompt)

So, we have our terminal open here.
    The first part of the prompt is our username, 
    the next part tells us the current directory that we're in
    and then we have a dollar sign.

ECHO
    An echo works like a print statement.
    cli: echo Hello World
        see Hello World on the cli
    cli: echo "Hello World" >> hello.html
        words are directed (>>) into the hello.html file
        creates the hello.html file if it didn't already exist

TOUCH
    creates a file
    cli: touch hello.html

MKDIR
    creates a directory
    cli: mkdir Hello

RM
    removes file
    cli: rm hello.html
    removes folder / directory
    cli: rm -rf Hello

COPY
    cli: cp hello.html Hello
        copies hello.html and puts it in Hello directory

MOVE
    cli: my hello.html Hello    
        movies hello.html into Hello

DUPLICATE
    cli: cp hello.html bonjour.html
        copies hello.html and makes a new file called bonjour.html (in the same place)

HISTORY
    This is very useful for accessing commands via shortcuts.
    The numbers on the left-hand side indicate the IDs of the commands.
    cli: !1 
        see command and output

CLEAR
    cli: clear
    That will just clear the screen, it doesn't clear the history.
    It just removes text from the screen to make it look cleaner.

PWD
    cli: PWD
    We can find out which directory we're currently in 
    stands for "print working directory" 

LS
    cli: ls
    lists all the files in our current directory.
    cli: ls -a
    shows all files including hidden files (i.e. files that are preceded witha dot)

CD 
    cli: cd
    stands for "change directory".
    cli: cd ..
        will bring us back up one level.
    cli: cd ../../
        will bring us back up two levels.
    Note: directories are printed in bold text, files are shown as regular text.
    cli: cd bloutique_ado
        takes you directly to boutique_ado directory (synonym of folder)
    cli: cd
        takes you to the very top of the file tree
    cli: cd - 
        takes you back to where you last were
    cli: cd ~/ 
    cli: cd ~


